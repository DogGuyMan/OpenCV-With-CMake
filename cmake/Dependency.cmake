find_package(fmt REQUIRED)
set(DEP_LIBS ${DEP_LIBS} fmt::fmt)
message(STATUS "fmt Json ${fmt_DIR}")

find_package(nlohmann_json REQUIRED)
set(DEP_LIBS ${DEP_LIBS} nlohmann_json::nlohmann_json)
message(STATUS "nlohmann json ${nlohmann_json_DIR}")

set(OPENCV_ENABLE_NONFREE ON CACHE BOOL "Enable nonfree algorithms" FORCE)
set(BUILD_SHARED_LIBS ON CACHE BOOL "Build shared libraries" FORCE)
set(BUILD_WITH_STATIC_CRT OFF CACHE BOOL "Use dynamic CRT instead of static" FORCE)
set(BUILD_PACKAGE OFF CACHE BOOL "Build package" FORCE)
set(BUILD_EXAMPLES ON CACHE BOOL "Build examples" FORCE)
set(BUILD_TBB OFF CACHE BOOL "Build TBB from 3rdparty" FORCE)
set(BUILD_TESTS OFF CACHE BOOL "Build tests" FORCE)
set(BUILD_opencv_python3 OFF CACHE BOOL "Build OpenCV Python3 bindings" FORCE)
set(BUILD_opencv_python_bindings_generator OFF CACHE BOOL "Build Python bindings generator" FORCE)
set(BUILD_opencv_python_tests OFF CACHE BOOL "Build OpenCV Python tests" FORCE)
set(WITH_CUDA OFF CACHE BOOL "Enable CUDA support" FORCE)
set(WITH_DIRECTX OFF CACHE BOOL "Enable DirectX support" FORCE)
set(WITH_IPP ON CACHE BOOL "Enable IPP optimizations" FORCE)
set(WITH_MSMF OFF CACHE BOOL "Enable MSMF support" FORCE)
set(WITH_OPENCL ON CACHE BOOL "Enable OpenCL support" FORCE)
set(WITH_OPENCLAMDBLAS ON CACHE BOOL "Enable OpenCL AMD BLAS support" FORCE)
set(WITH_OPENCLAMDFFT ON CACHE BOOL "Enable OpenCL AMD FFT support" FORCE)
set(WITH_OPENGL OFF CACHE BOOL "Enable OpenGL support" FORCE)
set(WITH_FFMPEG ON CACHE BOOL "Enable FFMPEG support" FORCE)
set(OpenCV_ROOT "${VCPKG_INSTALLED_DIR}/arm64-osx/share/opencv4")
find_package(OpenCV REQUIRED)
set(DEP_LIBS ${DEP_LIBS} ${OpenCV_LIBS})

find_package(spdlog REQUIRED)
set(DEP_LIBS ${DEP_LIBS} spdlog::spdlog)
